// src/pages/Work/modules/excel/ModuleExcelEditor.tsx
import React, { useState, useEffect } from "react";
import * as XLSX from "xlsx";
import "handsontable/dist/handsontable.full.min.css";

// –ò–º–ø–æ—Ä—Ç —Ç–∞–±–ª–∏—Ü
import TableMain from "./tables/TableMain";
import TableCatalogWells from "./tables/TableCatalogWells";
import TableCatalogThermoWells from "./tables/TableCatalogThermoWells";
import TableVEZ from "./tables/TableVEZ";
import TableBT from "./tables/TableBT";
import TableLithology from "./tables/TableLithology";
import TableThermo from "./tables/TableThermo";
import TableVEZData from "./tables/TableVEZData";
import TableBTData from "./tables/TableBTData";
import TableRegional from "./tables/TableRegional";
import TableIGE from "./tables/TableIGE";
import TableConclusions from "./tables/TableConclusions";

const STORAGE_KEY = "my-profgeo-tables";

const tableNames = [
  "–û—Å–Ω–æ–≤–Ω–æ–µ",
  "–ö–∞—Ç–∞–ª–æ–≥ —Å–∫–≤–∞–∂–∏–Ω",
  "–ö–∞—Ç–∞–ª–æ–≥ —Å–∫–≤–∞–∂–∏–Ω –¥–ª—è —Ç–µ—Ä–º–æ–º–µ—Ç—Ä–∏–∏",
  "–ö–∞—Ç–∞–ª–æ–≥ –í–≠–ó",
  "–ö–∞—Ç–∞–ª–æ–≥ –ë–¢",
  "–õ–∏—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ä–∞–∑—Ä–µ–∑",
  "–î–∞–Ω–Ω—ã–µ —Ç–µ—Ä–º–æ–º–µ—Ç—Ä–∏–∏",
  "–î–∞–Ω–Ω—ã–µ –í–≠–ó",
  "–î–∞–Ω–Ω—ã–µ –ë–¢",
  "–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
  "–ü–µ—Ä–µ—á–µ–Ω—å –ò–ì–≠",
  "–í—ã–≤–æ–¥—ã",
];

const defaultData: any[][][] = [
  [["ID", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–û–ø–∏—Å–∞–Ω–∏–µ"], [1, "–ü—Ä–æ–µ–∫—Ç –ê", "–û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"]],
  [["ID", "–°–∫–≤–∞–∂–∏–Ω–∞", "–ì–ª—É–±–∏–Ω–∞"]],
  [["ID", "–°–∫–≤–∞–∂–∏–Ω–∞ —Ç–µ—Ä–º–æ", "–ì–ª—É–±–∏–Ω–∞"]],
  [["ID", "–í–≠–ó"]],
  [["ID", "–ë–¢"]],
  [["ID", "–õ–∏—Ç–æ–ª–æ–≥–∏—è"]],
  [["ID", "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞"]],
  [["ID", "–î–∞–Ω–Ω—ã–µ –í–≠–ó"]],
  [["ID", "–î–∞–Ω–Ω—ã–µ –ë–¢"]],
  [["ID", "–†–µ–≥–∏–æ–Ω"]],
  [["ID", "–ò–ì–≠"]],
  [["–í—ã–≤–æ–¥—ã"]],
];

const ModuleExcelEditor: React.FC = () => {
  const [activeTable, setActiveTable] = useState(0);
  const [tablesData, setTablesData] = useState<any[][][]>(defaultData);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
  useEffect(() => {
    const saved = localStorage.getItem(STORAGE_KEY);
    if (saved) {
      try {
        const parsed = JSON.parse(saved);
        if (Array.isArray(parsed)) {
          setTablesData(parsed);
        }
      } catch (e) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage:", e);
      }
    }
  }, []);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  useEffect(() => {
    localStorage.setItem(STORAGE_KEY, JSON.stringify(tablesData));
  }, [tablesData]);

  const setTableData = (index: number, newData: any[][]) => {
    setTablesData((prev) => {
      const updated = [...prev];
      updated[index] = newData;
      return updated;
    });
  };

  // —Ñ—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –≤ –æ–¥–∏–Ω Excel
  const handleExportAll = () => {
    const workbook = XLSX.utils.book_new();

    tablesData.forEach((data, i) => {
      const worksheet = XLSX.utils.aoa_to_sheet(data);
      XLSX.utils.book_append_sheet(workbook, worksheet, tableNames[i]);
    });

    XLSX.writeFile(workbook, "all_tables.xlsx");
  };

  // —Å–±—Ä–æ—Å –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
  const handleReset = () => {
    if (window.confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã?")) {
      setTablesData(defaultData);
      localStorage.removeItem(STORAGE_KEY);
    }
  };

  const renderActiveTable = () => {
    const props = {
      data: tablesData[activeTable],
      setData: (newData: any[][]) => setTableData(activeTable, newData),
    };

    switch (activeTable) {
      case 0: return <TableMain {...props} />;
      case 1: return <TableCatalogWells {...props} />;
      case 2: return <TableCatalogThermoWells {...props} />;
      case 3: return <TableVEZ {...props} />;
      case 4: return <TableBT {...props} />;
      case 5: return <TableLithology {...props} />;
      case 6: return <TableThermo {...props} />;
      case 7: return <TableVEZData {...props} />;
      case 8: return <TableBTData {...props} />;
      case 9: return <TableRegional {...props} />;
      case 10: return <TableIGE {...props} />;
      case 11: return <TableConclusions {...props} />;
      default: return <TableMain {...props} />;
    }
  };

  return (
    <div style={{ padding: 20 }}>
      {/* üîò –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–∞–±–ª–∏—Ü */}
      <div style={{ display: "flex", overflowX: "auto", marginBottom: 15, gap: "10px" }}>
        {tableNames.map((name, index) => (
          <button
            key={index}
            onClick={() => setActiveTable(index)}
            style={{
              padding: "8px 12px",
              background: activeTable === index ? "#1976d2" : "#eee",
              color: activeTable === index ? "#fff" : "#000",
              borderRadius: 6,
              cursor: "pointer",
            }}
          >
            {name}
          </button>
        ))}
      </div>

      {/* üìù –ê–∫—Ç–∏–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ */}
      {renderActiveTable()}

      {/* üì§ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ */}
      <div style={{ marginTop: 20, display: "flex", gap: 10 }}>
        <button onClick={handleExportAll}>–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã</button>
        <button onClick={handleReset} style={{ background: "#e53935", color: "#fff" }}>
          –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        </button>
      </div>
    </div>
  );
};

export default ModuleExcelEditor;

